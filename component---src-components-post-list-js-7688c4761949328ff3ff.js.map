{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/post-list.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ListLink","props","style","display","marginRight","to","children","textShadow","backgroundImage","float","margin","maxWidth","padding","PostList","render","posts","this","data","allMdx","edges","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","map","post","node","key","id","fields","slug","frontmatter","title","excerpt","justifyContent","rel","React","Component","pageQuery","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"oHAEe,oBACb,6BACE,6BADF,4D,YCAIA,EAAW,SAAAC,GAAK,OACpB,wBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,kBAAC,IAAD,CAAMC,GAAIJ,EAAMI,IAAKJ,EAAMK,YAIhB,oBACb,gCACE,kBAAC,IAAD,CAAMD,GAAG,IAAIH,MAAO,CAAEK,WAAW,OAASC,gBAAgB,SAExD,wBAAIN,MAAO,CAAEC,QAAQ,WAArB,mBAEF,wBAAID,MAAO,CAAEC,QAAQ,SAAWM,MAAM,UACpC,kBAAC,EAAD,CAAUJ,GAAG,gBAAb,aACA,kBAAC,EAAD,CAAUA,GAAG,YAAb,YACA,kBAAC,EAAD,CAAUA,GAAG,gBAAb,gBACA,kBAAC,EAAD,CAAUA,GAAG,WAAb,WAEF,+BChBW,oBAAGC,EAAH,EAAGA,SAAH,OACb,yBAAKJ,MAAO,CAAEQ,OAAO,YAAcC,SAAU,IAAKC,QAAQ,WACxD,kBAAC,EAAD,MACCN,EACD,kBAAC,EAAD,S,4JCJEO,E,gLACJC,OAAA,WAAU,IACOC,EAAUC,KAAKf,MAAMgB,KAAKC,OAAjCC,MADD,EAG2BH,KAAKf,MAAMmB,YAArCC,EAHD,EAGCA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IALR,EAGcG,SAGfC,EAAQ,iBAAmBJ,EAAc,GAAM,EAAI,IAAMA,EAAc,GAAGK,YAC1EC,EAAQ,iBAAoBN,EAAc,GAAGK,WAEnD,OACE,kBAAC,IAAD,KACE,yCACA,4BACEX,EAAMa,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,wBAAIC,IAAKF,EAAKG,IACZ,kBAAC,IAAD,CAAM3B,GAAIwB,EAAKI,OAAOC,MACpB,4BAAKL,EAAKM,YAAYC,QAExB,2BAAIP,EAAKQ,cAId,yBAAKnC,MAAO,CAACC,QAAS,OAAQmC,eAAgB,qBAC1ChB,GACA,kBAAC,IAAD,CAAMjB,GAAIoB,EAAUc,IAAI,QAAxB,gBAEAhB,GACA,kBAAC,IAAD,CAAMlB,GAAIsB,EAAUY,IAAI,QAAxB,iB,GA5BWC,IAAMC,WAoChBC,EAAS,YAuBP7B,a,kCChEf,sGAcyB8B,QAAOC,QAELJ,IAAMK,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,geCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEb,IAAMc,cAAcC,I,+VAApB,EACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-components-post-list-js-7688c4761949328ff3ff.js","sourcesContent":["import React from \"react\"\n\nexport default () => (\n  <div>\n    <hr/>\n    «Antes faltarán robles y encinas que casas cachupinas».\n  </div>\n)","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nexport default () => (\n  <header>\n    <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n      {/** TODO Use siteMetadata */}\n      <h3 style={{ display: `inline` }}>Plaza Cachupín</h3>\n    </Link>\n    <ul style={{ display: `inline`, float: `right` }}>\n      <ListLink to=\"/posts/pages\">Artículos</ListLink>\n      <ListLink to=\"/contact\">Contacto</ListLink>\n      <ListLink to=\"/recommended\">Recomendamos</ListLink>\n      <ListLink to=\"/about/\">Acerca</ListLink>\n    </ul>\n    <hr/>\n</header>\n)","import React from \"react\"\n\nimport Footer from './footer'\nimport Header from './header'\n\nexport default ({ children }) => (\n  <div style={{ margin: `3rem auto`, maxWidth: 720, padding: `0 1rem` }}>\n    <Header/>\n    {children}\n    <Footer/>\n  </div>\n)","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from './layout'\n\nclass PostList extends React.Component {\n  render() {\n    const { edges: posts } = this.props.data.allMdx\n\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = `/posts/pages/${currentPage - 1 === 1 ? \"\" : (currentPage - 1).toString()}`\n    const nextPage = `/posts/pages/${(currentPage + 1).toString()}`\n\n    return (\n      <Layout>\n        <h1>Artículos</h1>\n        <ul>\n         {posts.map(({ node: post }) => (\n           <li key={post.id}>\n             <Link to={post.fields.slug}>\n               <h2>{post.frontmatter.title}</h2>\n             </Link>\n             <p>{post.excerpt}</p>\n           </li>\n         ))}\n        </ul>\n        <div style={{display: 'flex', justifyContent: 'space-between  '}}>\n          {!isFirst && (\n            <Link to={prevPage} rel=\"prev\">← Recientes</Link>\n          )}\n          {!isLast && (\n            <Link to={nextPage} rel=\"next\">Antiguos →</Link>\n          )}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query blogIndex ($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default PostList","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}